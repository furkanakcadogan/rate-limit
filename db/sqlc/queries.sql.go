// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: queries.sql

package db

import (
	"context"
)

const createNewUser = `-- name: CreateNewUser :exec
INSERT INTO "rate_limits" ("clientid", "rate_limit", "refill_interval") VALUES ($1, $2, $3)
`

type CreateNewUserParams struct {
	Clientid       string `json:"clientid"`
	RateLimit      int32  `json:"rate_limit"`
	RefillInterval int32  `json:"refill_interval"`
}

func (q *Queries) CreateNewUser(ctx context.Context, arg CreateNewUserParams) error {
	_, err := q.exec(ctx, q.createNewUserStmt, createNewUser, arg.Clientid, arg.RateLimit, arg.RefillInterval)
	return err
}

const getRateLimitByID = `-- name: GetRateLimitByID :one
SELECT id, clientid, rate_limit, refill_interval FROM "rate_limits" WHERE "id" = $1
`

func (q *Queries) GetRateLimitByID(ctx context.Context, id int32) (RateLimit, error) {
	row := q.queryRow(ctx, q.getRateLimitByIDStmt, getRateLimitByID, id)
	var i RateLimit
	err := row.Scan(
		&i.ID,
		&i.Clientid,
		&i.RateLimit,
		&i.RefillInterval,
	)
	return i, err
}
